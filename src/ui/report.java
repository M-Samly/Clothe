/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ui;

import code.reportCode;
import database.db;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.MessageFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;

/**
 *
 * @author M_Samly
 */
public class report extends javax.swing.JInternalFrame {

    /**
     * Creates new form report
     */
    public report() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);

        show_Report();
    }

    public ArrayList<reportCode> reportList() {
        ArrayList<reportCode> reportList = new ArrayList<>();
        try {
            Connection con;
            Statement st;
            con = db.getConnection();
            st = con.createStatement();
            String query = "Select * from sales order by b_id";
            ResultSet rs = st.executeQuery(query);
            reportCode pro;
            while (rs.next()) {
                pro = new reportCode(rs.getInt("b_id"), rs.getString("cashier"), rs.getString("date"), rs.getString("time"), rs.getInt("item"), rs.getString("customer"), rs.getString("type"), rs.getFloat("total"), rs.getFloat("discount"), rs.getFloat("payment"), rs.getFloat("balance"));
                reportList.add(pro);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return reportList;
    }

    public void show_Report() {
        ArrayList<reportCode> al = reportList();
        DefaultTableModel model = (DefaultTableModel) tblReport.getModel();
        Object[] row = new Object[11];
        for (int i = 0; i < al.size(); i++) {
            row[0] = al.get(i).getBilno();
            row[1] = al.get(i).getCashier();
            row[2] = al.get(i).getDate();
            row[3] = al.get(i).getTime();
            row[4] = al.get(i).getItem();
            row[5] = al.get(i).getCustomer();
            row[6] = al.get(i).getType();
            row[7] = al.get(i).getTotal();
            row[8] = al.get(i).getDiscount();
            row[9] = al.get(i).getPayment();
            row[10] = al.get(i).getBalance();
            model.addRow(row);
        }
        totalincome();
    }

    public void totalincome() {
        float totalincome = 0;
        for (int i = 0; i < tblReport.getRowCount(); i++) {
            float Total = (Float.parseFloat(tblReport.getValueAt(i, 9).toString()));
            totalincome = totalincome + Total;
        }
        txtIncome.setText(String.valueOf(new DecimalFormat("0.00").format(totalincome)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReport = new javax.swing.JTable();
        txtIncome = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtsearchbydate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtsearchbybillno = new javax.swing.JTextField();
        txtsearchbycustomer = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 712));

        jPanel4.setPreferredSize(new java.awt.Dimension(1024, 662));

        tblReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill #", "Cashier", "Date", "Time", "Item", "Customer", "Type", "Total", "Discount", "Payment", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReport.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblReport);
        if (tblReport.getColumnModel().getColumnCount() > 0) {
            tblReport.getColumnModel().getColumn(0).setResizable(false);
            tblReport.getColumnModel().getColumn(1).setResizable(false);
            tblReport.getColumnModel().getColumn(2).setResizable(false);
            tblReport.getColumnModel().getColumn(3).setResizable(false);
            tblReport.getColumnModel().getColumn(4).setResizable(false);
            tblReport.getColumnModel().getColumn(5).setResizable(false);
            tblReport.getColumnModel().getColumn(6).setResizable(false);
            tblReport.getColumnModel().getColumn(7).setResizable(false);
            tblReport.getColumnModel().getColumn(8).setResizable(false);
            tblReport.getColumnModel().getColumn(9).setResizable(false);
            tblReport.getColumnModel().getColumn(10).setResizable(false);
        }

        txtIncome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtIncome.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtIncome.setText("0.00");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Total Sale");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("K");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Search By Date");

        txtsearchbydate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtsearchbydate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchbydateKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("2023-11-16");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Search By Bill No.");

        txtsearchbybillno.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtsearchbybillno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchbybillnoKeyReleased(evt);
            }
        });

        txtsearchbycustomer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtsearchbycustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchbycustomerKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Search By Custmer");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtsearchbydate)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtsearchbybillno))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtsearchbycustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 264, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGap(21, 21, 21))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtsearchbybillno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtsearchbydate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtsearchbycustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jDesktopPane1.setLayer(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtsearchbybillnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchbybillnoKeyReleased
        // TODO add your handling code here:
        ArrayList<reportCode> al = new ArrayList<reportCode>();
        //al = new ArrayList<AddItems>();
        String val = txtsearchbybillno.getText().toString().trim();
        try {
            Connection con;
            Statement st;
            con = db.getConnection();
            st = con.createStatement();
            String query = "Select * from sales where b_id like '" + val + "%'";
            ResultSet rs = st.executeQuery(query);
            reportCode pro;
            while (rs.next()) {
                pro = new reportCode(rs.getInt("b_id"), rs.getString("cashier"), rs.getString("date"), rs.getString("time"), rs.getInt("item"), rs.getString("customer"), rs.getString("type"), rs.getFloat("total"), rs.getFloat("discount"), rs.getFloat("payment"), rs.getFloat("balance"));
                al.add(pro);
            }

            DefaultTableModel model = (DefaultTableModel) tblReport.getModel();
            model.setRowCount(0);
            Object[] row = new Object[11];
            for (int i = 0; i < al.size(); i++) {
                row[0] = al.get(i).getBilno();
                row[1] = al.get(i).getCashier();
                row[2] = al.get(i).getDate();
                row[3] = al.get(i).getTime();
                row[4] = al.get(i).getItem();
                row[5] = al.get(i).getCustomer();
                row[6] = al.get(i).getType();
                row[7] = al.get(i).getTotal();
                row[8] = al.get(i).getDiscount();
                row[9] = al.get(i).getPayment();
                row[10] = al.get(i).getBalance();
                model.addRow(row);
            }
            totalincome();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cannot find Item Name", "Search Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtsearchbybillnoKeyReleased

    private void txtsearchbycustomerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchbycustomerKeyReleased
        // TODO add your handling code here:
        ArrayList<reportCode> al = new ArrayList<reportCode>();
        //al = new ArrayList<AddItems>();
        String val = txtsearchbycustomer.getText().toString().trim();
        try {
            Connection con;
            Statement st;
            con = db.getConnection();
            st = con.createStatement();
            String query = "Select * from sales where customer like '" + val + "%'";
            ResultSet rs = st.executeQuery(query);
            reportCode pro;
            while (rs.next()) {
                pro = new reportCode(rs.getInt("b_id"), rs.getString("cashier"), rs.getString("date"), rs.getString("time"), rs.getInt("item"), rs.getString("customer"), rs.getString("type"), rs.getFloat("total"), rs.getFloat("discount"), rs.getFloat("payment"), rs.getFloat("balance"));
                al.add(pro);
            }

            DefaultTableModel model = (DefaultTableModel) tblReport.getModel();
            model.setRowCount(0);
            Object[] row = new Object[11];
            for (int i = 0; i < al.size(); i++) {
                row[0] = al.get(i).getBilno();
                row[1] = al.get(i).getCashier();
                row[2] = al.get(i).getDate();
                row[3] = al.get(i).getTime();
                row[4] = al.get(i).getItem();
                row[5] = al.get(i).getCustomer();
                row[6] = al.get(i).getType();
                row[7] = al.get(i).getTotal();
                row[8] = al.get(i).getDiscount();
                row[9] = al.get(i).getPayment();
                row[10] = al.get(i).getBalance();
                model.addRow(row);
            }
            totalincome();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cannot find Item Name", "Search Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtsearchbycustomerKeyReleased

    private void txtsearchbydateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchbydateKeyReleased
        // TODO add your handling code here:
        ArrayList<reportCode> al = new ArrayList<reportCode>();
        //al = new ArrayList<AddItems>();
        String val = txtsearchbydate.getText().toString().trim();
        try {
            Connection con;
            Statement st;
            con = db.getConnection();
            st = con.createStatement();
            String query = "Select * from sales where date like '" + val + "%'";
            ResultSet rs = st.executeQuery(query);
            reportCode pro;
            while (rs.next()) {
                pro = new reportCode(rs.getInt("b_id"), rs.getString("cashier"), rs.getString("date"), rs.getString("time"), rs.getInt("item"), rs.getString("customer"), rs.getString("type"), rs.getFloat("total"), rs.getFloat("discount"), rs.getFloat("payment"), rs.getFloat("balance"));
                al.add(pro);
            }

            DefaultTableModel model = (DefaultTableModel) tblReport.getModel();
            model.setRowCount(0);
            Object[] row = new Object[11];
            for (int i = 0; i < al.size(); i++) {
                row[0] = al.get(i).getBilno();
                row[1] = al.get(i).getCashier();
                row[2] = al.get(i).getDate();
                row[3] = al.get(i).getTime();
                row[4] = al.get(i).getItem();
                row[5] = al.get(i).getCustomer();
                row[6] = al.get(i).getType();
                row[7] = al.get(i).getTotal();
                row[8] = al.get(i).getDiscount();
                row[9] = al.get(i).getPayment();
                row[10] = al.get(i).getBalance();
                model.addRow(row);
            }
            totalincome();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cannot find Item Name", "Search Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtsearchbydateKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            MessageFormat header = new MessageFormat("All Reports");
            MessageFormat footer = new MessageFormat("Page{0, number, integer}");
            String data[] = {};
            DefaultTableModel model = (DefaultTableModel) tblReport.getModel();
            model.addRow(data);
            String data1[] = {"", "", "", "", "", "", "", "", "", "Total Sales", txtIncome.getText()};
            DefaultTableModel model1 = (DefaultTableModel) tblReport.getModel();
            model1.addRow(data1);
            tblReport.print(JTable.PrintMode.FIT_WIDTH, header, footer);
            
            txtsearchbybillno.setText(null);
            txtsearchbycustomer.setText(null);
            txtsearchbydate.setText(null);
            DefaultTableModel model2 = (DefaultTableModel) tblReport.getModel();
            model2.setRowCount(0);
            show_Report();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tblReport;
    public static javax.swing.JLabel txtIncome;
    private javax.swing.JTextField txtsearchbybillno;
    private javax.swing.JTextField txtsearchbycustomer;
    private javax.swing.JTextField txtsearchbydate;
    // End of variables declaration//GEN-END:variables
}
