/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ui;

import code.cashierCode;
import database.db;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import org.springframework.ui.Model;

/**
 *
 * @author M_Samly
 */
public class cashier extends javax.swing.JInternalFrame {

    /**
     * Creates new form productCode
     */
    public cashier() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);

        Bill();
    }

    public void Bill() {
        try {
            Connection con;
            Statement st;
            con = db.getConnection();
            st = con.createStatement();
            String query = "Select b_id from bill_no"; //order by Name";
            PreparedStatement pst = con.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                int bill = rs.getInt("b_id");
                txtBillNo.setText(Integer.toString(bill));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        txtSearchBarcode = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JLabel();
        txtType = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBill = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jcomPaymentType = new javax.swing.JComboBox<>();
        txtReturn = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnType = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPayment = new javax.swing.JTextField();
        txtBalance = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTotalDiscount = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtItem = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        txtBillNo = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();

        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 712));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        txtSearchBarcode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearchBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchBarcodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchBarcodeKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Search By Barcode");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("F1 - Retail");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("F2 - Wholesale");

        txtUserName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtUserName.setText("-");

        txtType.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtType.setText("Retail");

        tblBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "Name", "Price", "Quantity", "Discount", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBill.getTableHeader().setReorderingAllowed(false);
        tblBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBillMouseClicked(evt);
            }
        });
        tblBill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblBillKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblBill);
        if (tblBill.getColumnModel().getColumnCount() > 0) {
            tblBill.getColumnModel().getColumn(0).setResizable(false);
            tblBill.getColumnModel().getColumn(1).setResizable(false);
            tblBill.getColumnModel().getColumn(2).setResizable(false);
            tblBill.getColumnModel().getColumn(3).setResizable(false);
            tblBill.getColumnModel().getColumn(4).setResizable(false);
            tblBill.getColumnModel().getColumn(5).setResizable(false);
        }

        jcomPaymentType.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jcomPaymentType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Card", "Cheque", "Loan", "Return" }));

        txtReturn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtReturn.setText("0.00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcomPaymentType, 0, 156, Short.MAX_VALUE)
                    .addComponent(txtReturn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcomPaymentType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtCustomer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtCustomer.setText("Customer");
        txtCustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCustomerKeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Reset All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnType.setText("Type");
        btnType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTypeActionPerformed(evt);
            }
        });

        jButton2.setText("Return");

        jButton3.setText("Loan");

        jButton4.setText("Cheque");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Total");

        txtTotalAmount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtTotalAmount.setText("0.00");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Payment");

        txtPayment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPaymentKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPaymentKeyReleased(evt);
            }
        });

        txtBalance.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtBalance.setText("0.00");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Balance");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Discount");

        txtTotalDiscount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtTotalDiscount.setText("0.00");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Item");

        txtItem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtItem.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotalDiscount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotalAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPayment, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(txtBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(21, 21, 21))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalDiscount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton5.setText("Stock");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton7.setText("Card");

        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton8.setText("Cheque");

        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton9.setText("Loan");

        txtBillNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtBillNo.setText("0");

        jButton10.setText("Alert");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(465, 465, 465)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jButton7)
                                .addGap(6, 6, 6)
                                .addComponent(jButton8)
                                .addGap(6, 6, 6)
                                .addComponent(jButton9))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnType, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                                .addGap(6, 6, 6)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 40, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(695, 695, 695)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(txtSearchBarcode))
                        .addGap(499, 499, 499)
                        .addComponent(txtBillNo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton1)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txtUserName))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearchBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtBillNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnType, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(21, Short.MAX_VALUE))))
        );

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jMenu3.setText("Return");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu2.setText("Loan");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu5.setText("Cheque");
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        jMenu4.setText("Stock");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu6.setText("Search");
        jMenu6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu6MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu6);

        jMenu7.setText("Alert");
        jMenu7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu7MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu7);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
/*        cashier_return cash = new cashier_return();
        jDesktopPane1.add(cash).setVisible(true);
        cash.txtSearchBillNo.requestFocus();*/
    }//GEN-LAST:event_jMenu3MouseClicked

    private void txtSearchBarcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchBarcodeKeyReleased
        // TODO add your handling code here:
        String type = txtType.getText();
        if (type == "Retail") {
            /*ArrayList<cashierCode> al = new ArrayList<cashierCode>();
            //al = new ArrayList<AddItems>();
            String val = txtSearchBarcode.getText().toString().trim();
            try {
                Connection con;
                Statement st;
                con = db.getConnection();
                st = con.createStatement();
                String query = "Select * from product where quantity > 0 AND barcode like '" + val + "%'";
                ResultSet rs = st.executeQuery(query);
                cashierCode pro;
                while (rs.next()) {
                    pro = new cashierCode(rs.getString("barcode"), rs.getString("name"), rs.getInt("quantity"), rs.getFloat("rprice"));
                    al.add(pro);
                }

                DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
                model.setRowCount(0);
                Object[] row = new Object[6];
                for (int i = 0; i < al.size(); i++) {
                    row[0] = al.get(i).getBarcode();
                    row[1] = al.get(i).getName();
                    row[2] = al.get(i).getQty();
                    row[3] = al.get(i).getPrice();
                    model.addRow(row);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Cannot find Item Name", "Search Error", JOptionPane.ERROR_MESSAGE);
            }*/

 /* try {
                String searchBarcode = txtSearchBarcode.getText();
                Connection con;
                Statement st;
                con = db.getConnection();
                st = con.createStatement();
                String query = "Select barcode,name,rprice From product where barcode = '" + txtSearchBarcode.getText() + "'";
                PreparedStatement pst = con.prepareStatement(query);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    String barcode = rs.getString("barcode");
                    String name = rs.getString("name");
                    float rprice = rs.getFloat("rprice");
                    //System.out.println(barcode);
                    if (searchBarcode == barcode) {
                        txtName.setText(name);
                        txtPrice.setText(String.valueOf(new DecimalFormat("0.00").format(rprice)));
                    }
                }
             */
 /*
                
                 int j = 0;
                //txtOk.requestFocus();
                DefaultTableModel model = new DefaultTableModel();
                model = (DefaultTableModel) tblBill.getModel();
                model.addRow(new Object[]{
                    txtBarcode.getText(),
                    txtName.getText(),
                    txtPrice.getText(),
                    txtQty.getText(),
                    txtDiscount.getText(),
                    txtTotal.getText(),}
                );

                float sum = 0;
                float discounttot = 0;
                for (int i = 0; i < tblBill.getRowCount(); i++) {
                    discounttot = discounttot + Float.parseFloat(tblBill.getValueAt(i, 4).toString());//* (Double.parseDouble(jTableBill.getValueAt(i, 1).toString()) * Double.parseDouble(jTableBill.getValueAt(i, 2).toString())
                    sum = sum + Float.parseFloat(tblBill.getValueAt(i, 5).toString());// - Double.parseDouble(tblBill.getValueAt(i, 4).toString());
                    j = i + 1;
                }
                float returnamount = Float.parseFloat(txtReturn.getText());
                float finalsum = sum - returnamount;
                txtItem.setText(Integer.toString(j));
                txtTotalAmount.setText(String.valueOf(new DecimalFormat("0.00").format(finalsum)));
                txtTotalDiscount.setText(String.valueOf(new DecimalFormat("0.00").format(discounttot)));

                
             */
            //txtQty.requestFocus();
            /* } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);//"Cannot find Item Name", "Search Error", JOptionPane.ERROR_MESSAGE);
            }*/
        } else if (type == "Wholesale") {
            /*ArrayList<cashierCode> al = new ArrayList<cashierCode>();
            //al = new ArrayList<AddItems>();
            String val = txtSearchBarcode.getText().toString().trim();
            try {
                Connection con;
                Statement st;
                con = db.getConnection();
                st = con.createStatement();
                String query = "Select * from product where quantity > 0 AND barcode like '" + val + "%'";
                ResultSet rs = st.executeQuery(query);
                cashierCode pro;
                while (rs.next()) {
                    pro = new cashierCode(rs.getString("barcode"), rs.getString("name"), rs.getInt("quantity"), rs.getFloat("wprice"));
                    al.add(pro);
                }

                DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
                model.setRowCount(0);
                Object[] row = new Object[6];
                for (int i = 0; i < al.size(); i++) {
                    row[0] = al.get(i).getBarcode();
                    row[1] = al.get(i).getName();
                    row[2] = al.get(i).getQty();
                    row[3] = al.get(i).getPrice();
                    model.addRow(row);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Cannot find Item Name", "Search Error", JOptionPane.ERROR_MESSAGE);
            }*/
        }
        /*String barcode = txtSearchBarcode.getText();
        DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
        String barcodeModal = model.getValueAt(0, 0).toString();
        if (barcodeModal.equalsIgnoreCase(barcode)) {
            txtQty.requestFocus();
        }*/

    }//GEN-LAST:event_txtSearchBarcodeKeyReleased

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        /*loanList ln = new loanList();
        jDesktopPane1.add(ln).setVisible(true);
        ln.txtSearchBillNo.requestFocus();*/
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        // TODO add your handling code here:
        stock stk = new stock();
        jDesktopPane1.add(stk).setVisible(true);
    }//GEN-LAST:event_jMenu4MouseClicked

    private void txtSearchBarcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchBarcodeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            txtType.setText("Retail");
        } else if (evt.getKeyCode() == KeyEvent.VK_F2) {
            txtType.setText("Wholesale");
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtPayment.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //tblProduct.requestFocus();
            //tblProduct.setRowSelectionInterval(0, 0);

            /*else {
            String barcode = txtSearchBarcode.getText();
            DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                String barcodeModal = model.getValueAt(i, 0).toString();
                if(barcode.equalsIgnoreCase(barcodeModal)){
                    txtQty.requestFocus();
                }
            }
        }*/
            String barcode = "";
            String name = "";
            float rprice = 0;
            boolean sameProduct = false;
            boolean status = false;
            int rowNumber = 0;
            int j = 0;

            String type = txtType.getText();

            try {
                Connection con;
                Statement st;
                con = db.getConnection();
                st = con.createStatement();

                String query = "Select barcode,name,rprice,wprice From product where barcode = '" + txtSearchBarcode.getText() + "'";
                PreparedStatement pst = con.prepareStatement(query);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    barcode = rs.getString("barcode");
                    name = rs.getString("name");
                    if (type == "Retail") {
                        rprice = rs.getFloat("rprice");
                    } else {
                        rprice = rs.getFloat("wprice");
                    }
                    String searchBarcode = txtSearchBarcode.getText();
                    if (searchBarcode.equals(barcode)) {
                        sameProduct = true;
                    }
                }

                if (sameProduct == true) {
                    //txtOk.requestFocus();
                    DefaultTableModel model = new DefaultTableModel();
                    model = (DefaultTableModel) tblBill.getModel();
                    if (model.getRowCount() == 0) {
                        model.addRow(new Object[]{
                            barcode,
                            name,
                            rprice,
                            1,
                            0.00,
                            rprice,}
                        );
                    } else {
                        for (int i = 0; i < model.getRowCount(); i++) {
                            String tableBarcode = model.getValueAt(i, 0).toString();
                            if (barcode.equals(tableBarcode)) {
                                status = true;
                                rowNumber = i;
                            }
                        }
                        if (status == true) {
                            int qunatity = Integer.parseInt(model.getValueAt(rowNumber, 3).toString()) + 1;
                            model.setValueAt(qunatity, rowNumber, 3);
                            float price = Float.parseFloat(model.getValueAt(rowNumber, 5).toString()) + rprice;
                            model.setValueAt(price, rowNumber, 5);

                            status = false;
                            rowNumber = 0;
                        } else {
                            model.addRow(new Object[]{
                                barcode,
                                name,
                                rprice,
                                1,
                                0.00,
                                rprice,}
                            );
                        }
                    }

                    sameProduct = false;
                } else {
                    JOptionPane.showMessageDialog(null, "Invalid Barcode");
                }

                barcode = "";
                name = "";
                rprice = 0;
                sameProduct = true;
                status = false;
                rowNumber = 0;

                txtSearchBarcode.setText(null);
                txtSearchBarcode.requestFocus();

                float sum = 0;
                float discounttot = 0;
                for (int i = 0; i < tblBill.getRowCount(); i++) {
                    discounttot = discounttot + Float.parseFloat(tblBill.getValueAt(i, 4).toString());//* (Double.parseDouble(jTableBill.getValueAt(i, 1).toString()) * Double.parseDouble(jTableBill.getValueAt(i, 2).toString())
                    sum = sum + Float.parseFloat(tblBill.getValueAt(i, 5).toString());// - Double.parseDouble(tblBill.getValueAt(i, 4).toString());
                    j = i + 1;
                }
                float returnamount = Float.parseFloat(txtReturn.getText());
                float finalsum = sum - returnamount;
                txtItem.setText(Integer.toString(j));
                txtTotalAmount.setText(String.valueOf(new DecimalFormat("0.00").format(finalsum)));
                txtTotalDiscount.setText(String.valueOf(new DecimalFormat("0.00").format(discounttot)));

                //txtQty.requestFocus();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);//"Cannot find Item Name", "Search Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtSearchBarcodeKeyPressed

    private void txtCustomerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtPayment.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {

        }
    }//GEN-LAST:event_txtCustomerKeyPressed

    private void txtPaymentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaymentKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            String paymentType = jcomPaymentType.getSelectedItem().toString();
            float returnAmount = Float.parseFloat(txtReturn.getText());

            txtTotalDiscount.setText(String.valueOf(new DecimalFormat("0.00").format(Float.parseFloat(txtTotalDiscount.getText()))));
            float checkpayment = Float.parseFloat(txtPayment.getText());
            if (checkpayment == 0) {
                int YesORNo = JOptionPane.showConfirmDialog(null, "Do you want to continue?", "Warning Option", JOptionPane.YES_NO_OPTION);
                if (YesORNo == 0) {
                    sales();
                    billPrint();

                    txtItem.setText("0");
                    txtCustomer.setText("Customer");
                    txtTotalDiscount.setText("0.00");
                    txtTotalAmount.setText("0.00");
                    txtPayment.setText(null);
                    txtBalance.setText("0.00");
                    txtReturn.setText("0.00");
                    jcomPaymentType.setSelectedIndex(0);

                    DefaultTableModel model = (DefaultTableModel) tblBill.getModel();
                    model.setRowCount(0);

                } else {
                    txtPayment.requestFocus();
                }

            } else {
                sales();
                billPrint();

                txtItem.setText("0");
                txtCustomer.setText("Customer");
                txtTotalDiscount.setText("0.00");
                txtTotalAmount.setText("0.00");
                txtPayment.setText(null);
                txtBalance.setText("0.00");
                txtReturn.setText("0.00");
                jcomPaymentType.setSelectedIndex(0);

                DefaultTableModel model = (DefaultTableModel) tblBill.getModel();
                model.setRowCount(0);

            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {

        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            jcomPaymentType.setSelectedIndex(1);
            float totalamount = Float.parseFloat(txtTotalAmount.getText());
            txtPayment.setText(String.valueOf(new DecimalFormat("0.00").format(totalamount)));
            txtPayment.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F6) {
            jcomPaymentType.setSelectedIndex(2);
            //float totalamount = Float.parseFloat(txtTotalAmount.getText());
            //txtPayment.setText(String.valueOf(new DecimalFormat("0.00").format(totalamount)));
            txtPayment.requestFocus();
        }
    }//GEN-LAST:event_txtPaymentKeyPressed

    private void txtPaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaymentKeyReleased
        // TODO add your handling code here:
        if (txtPayment.getText() != null) {
            float total = Float.parseFloat(txtTotalAmount.getText());
            float payment = Float.parseFloat(txtPayment.getText());
            float balance = payment - total;
            txtBalance.setText(String.valueOf(new DecimalFormat("0.00").format(balance)));
        }
    }//GEN-LAST:event_txtPaymentKeyReleased

    private void tblBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBillMouseClicked
        // TODO add your handling code here:
        int i = tblBill.getSelectedRow();
    }//GEN-LAST:event_tblBillMouseClicked

    private void tblBillKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblBillKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            int i = tblBill.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblBill.getModel();
            float total = Float.parseFloat(model.getValueAt(i, 5).toString());
            float discount = Float.parseFloat(model.getValueAt(i, 4).toString());

            float totalAmount = Float.parseFloat(txtTotalAmount.getText());
            float newtotal = totalAmount - total;
            txtTotalAmount.setText(String.valueOf(new DecimalFormat("0.00").format(newtotal)));

            float totalDiscount = Float.parseFloat(txtTotalDiscount.getText());
            float newDiscount = totalDiscount - discount;
            txtTotalDiscount.setText(String.valueOf(new DecimalFormat("0.00").format(newDiscount)));

            model.removeRow(i);

            int item = Integer.parseInt(txtItem.getText());
            item--;
            txtItem.setText(Integer.toString(item));

        } else if (evt.getKeyCode() == KeyEvent.VK_E) {
            /*txtQty.setText("0");
            txtDiscount.setText("0");
            txtTotal.setText(null);
            int i = tblBill.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblBill.getModel();

            txtBarcode.setText(model.getValueAt(i, 0).toString());
            txtName.setText(model.getValueAt(i, 1).toString());
            txtPrice.setText(model.getValueAt(i, 2).toString());

            String total = (String) (model.getValueAt(i, 5));
            String discount = (String) (model.getValueAt(i, 4));

            float totalAmount = Float.parseFloat(txtTotalAmount.getText());
            float newtotal = totalAmount - Float.parseFloat(total);
            txtTotalAmount.setText(String.valueOf(new DecimalFormat("0.00").format(newtotal)));

            float totalDiscount = Float.parseFloat(txtTotalDiscount.getText());
            float newDiscount = totalDiscount - Float.parseFloat(discount);
            txtTotalDiscount.setText(String.valueOf(new DecimalFormat("0.00").format(newDiscount)));

            model.removeRow(i);

            int item = Integer.parseInt(txtItem.getText());
            item--;
            txtItem.setText(Integer.toString(item));

            txtQty.requestFocus();
             */
        }
    }//GEN-LAST:event_tblBillKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        txtItem.setText("0");
        txtCustomer.setText("Customer");
        txtTotalDiscount.setText("0.00");
        txtTotalAmount.setText("0.00");
        txtPayment.setText(null);
        txtBalance.setText("0.00");
        txtReturn.setText("0.00");
        jcomPaymentType.setSelectedIndex(0);

        /*        
        txtBarcode.setText(null);
        txtName.setText(null);
        txtQty.setText("0");
        txtPrice.setText(null);
        txtTotal.setText(null);
        txtDiscount.setText("0");
         */
        txtSearchBarcode.setText(null);
        txtSearchBarcode.requestFocus();

        DefaultTableModel model = (DefaultTableModel) tblBill.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTypeActionPerformed
        // TODO add your handling code here:
        String type = txtType.getText();
        if (type.equals("Retail")) {
            txtType.setText("Wholesale");
        } else if (type.equals("Wholesale")) {
            txtType.setText("Retail");
        }
    }//GEN-LAST:event_btnTypeActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseClicked
        // TODO add your handling code here:
        /*
        chequeList chq = new chequeList();
        jDesktopPane1.add(chq).setVisible(true);
        chq.txtSearchBillNo.requestFocus();
         */
    }//GEN-LAST:event_jMenu5MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        stock stk = new stock();
        jDesktopPane1.add(stk).setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:        
        searchName stk = new searchName();
        jDesktopPane1.add(stk).setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jMenu6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu6MouseClicked
        // TODO add your handling code here:
        searchName stk = new searchName();
        jDesktopPane1.add(stk).setVisible(true);
    }//GEN-LAST:event_jMenu6MouseClicked

    private void jMenu7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu7MouseClicked

    public void sales() {

        try {
            Connection con;
            PreparedStatement pst, pst1, pst2, pst3, pst4, pst5;
            con = db.getConnection();

            int billNo = Integer.parseInt(txtBillNo.getText());
            String cashier = txtUserName.getText();
            int item = Integer.parseInt(txtItem.getText());
            String customer = txtCustomer.getText();
            String type = jcomPaymentType.getSelectedItem().toString();
            float total = Float.parseFloat(txtTotalAmount.getText());
            float discount = Float.parseFloat(txtTotalDiscount.getText());
            float payment = Float.parseFloat(txtPayment.getText());
            float balance = Float.parseFloat(txtBalance.getText());

            float returnAmount = Float.parseFloat(txtReturn.getText());

            try {
                String query = "Insert into sales (b_id, cashier, date, time, item, customer, type, total, discount, payment, balance) values (?, ?,CURDATE(),CURTIME(),?,?,?,?,?,?,?)";
                pst = con.prepareStatement(query);
                pst.setInt(1, billNo);
                pst.setString(2, cashier);
                pst.setInt(3, item);
                pst.setString(4, customer);
                pst.setString(5, type);
                pst.setFloat(6, total);
                pst.setFloat(7, discount);
                pst.setFloat(8, payment);
                pst.setFloat(9, balance);
                pst.executeUpdate();

                try {

                    int rows = tblBill.getRowCount();
                    String query1 = "Insert into sales_product (b_id, barcode, name, price, quantity, discount, total) values (?,?,?,?,?,?,?)";
                    pst1 = con.prepareStatement(query1);

                    String barcode = "";
                    String iName = "";
                    float iprice = 0;
                    float iqty = 0;
                    float iDis = 0;
                    float iTotal = 0;

                    for (int i = 0; i < tblBill.getRowCount(); i++) {
                        barcode = (String) tblBill.getValueAt(i, 0);
                        iName = (String) tblBill.getValueAt(i, 1);
                        iprice = (Float.parseFloat(tblBill.getValueAt(i, 2).toString()));
                        iqty = (Float.parseFloat(tblBill.getValueAt(i, 3).toString()));
                        iDis = (Float.parseFloat(tblBill.getValueAt(i, 4).toString()));
                        iTotal = (Float.parseFloat(tblBill.getValueAt(i, 5).toString()));

                        pst1.setInt(1, billNo);
                        pst1.setString(2, barcode);
                        pst1.setString(3, iName);
                        pst1.setFloat(4, iprice);
                        pst1.setFloat(5, iqty);
                        pst1.setFloat(6, iDis);
                        pst1.setFloat(7, iTotal);
                        pst1.executeUpdate();

                        try {
                            String query2 = "Select bprice from product where barcode = '" + barcode + "' AND name = '" + iName + "' ";
                            pst2 = con.prepareStatement(query2);
                            ResultSet rs = pst2.executeQuery();

                            while (rs.next()) {
                                float bprice = rs.getFloat("bprice");

                                float income = iTotal - (bprice * iqty);

                                try {
                                    String query4 = "Insert into product_income (date, year, month, barcode, name, income) values (CURDATE(), YEAR(CURDATE()), MONTH(CURDATE()),?,?,?)";
                                    pst4 = con.prepareStatement(query4);
                                    pst4.setString(1, barcode);
                                    pst4.setString(2, iName);
                                    pst4.setFloat(3, income);
                                    pst4.executeUpdate();

                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(null, e);
                                }
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                        try {
                            String query3 = "Update product set Quantity = Quantity - '" + iqty + "' where barcode = '" + barcode + "' AND name= '" + iName + "'";
                            pst3 = con.prepareStatement(query3);
                            pst3.executeUpdate();

                            String saletype = txtType.getText();
                            if (saletype == "Retail") {
                                txtType.setText("Retail");
                            } else {
                                txtType.setText("Wholesale");
                            }

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }

                        if (i == (tblBill.getRowCount() - 1)) {
                            if (type != "Return" && balance < 0 && returnAmount == 0 && type != "Cheque") {
                                jcomPaymentType.setSelectedIndex(3);
                                type = jcomPaymentType.getSelectedItem().toString();

                                if (type == "Loan") {
                                    /* loan ln = new loan();
                                    jDesktopPane1.add(ln).setVisible(true);
                                    loan.txtAmount.setText(Float.toString(-balance));
                                    loan.txtCustomer.setText(txtCustomer.getText());
                                    loan.txtBillNo.setText(txtBillNo.getText());
                                    loan.txtCustomer.requestFocus();*/
                                }

                            } else if (type == "Cheque") {
                                /* cheque chq = new cheque();
                                jDesktopPane1.add(chq).setVisible(true);
                                cheque.txtAmount.setText(Float.toString(-balance));
                                cheque.txtCustomer.setText(txtCustomer.getText());
                                cheque.txtBillNo.setText(txtBillNo.getText());
                                cheque.txtCustomer.requestFocus();*/
                            } else {

                            }
                        }
                    }

                    try {
                        String query5 = "Insert into bill_no (date, time) values (CURDATE(),CURTIME())";
                        pst5 = con.prepareStatement(query5);
                        pst5.executeUpdate();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                    Bill();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void billPrint() {

        try {
            Connection con;
            PreparedStatement pst, pst1, pst2, pst3, pst4, pst5;
            con = db.getConnection();
            int bill = Integer.parseInt(txtBillNo.getText());
            HashMap m = new HashMap();
            m.put("Invoiceno", (bill - 1));
            try {
                JasperDesign jdesing = JRXmlLoader.load("E:\\M.Samly\\Clothing Management System\\Cloth_System\\src\\print\\reciept.jrxml");
                JasperReport ireport = JasperCompileManager.compileReport(jdesing);
                JasperPrint jprint = JasperFillManager.fillReport(ireport, m, con);
                //JasperViewer.viewReport(jprint);
                JasperPrintManager.printReport(jprint, false);
                txtSearchBarcode.requestFocus();
            } catch (JRException ex) {
                Logger.getLogger(cashier.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JComboBox<String> jcomPaymentType;
    public static javax.swing.JTable tblBill;
    private javax.swing.JLabel txtBalance;
    private javax.swing.JLabel txtBillNo;
    public static javax.swing.JTextField txtCustomer;
    public static javax.swing.JLabel txtItem;
    private javax.swing.JTextField txtPayment;
    public static javax.swing.JLabel txtReturn;
    public static javax.swing.JTextField txtSearchBarcode;
    public static javax.swing.JLabel txtTotalAmount;
    public static javax.swing.JLabel txtTotalDiscount;
    public static javax.swing.JLabel txtType;
    public static javax.swing.JLabel txtUserName;
    // End of variables declaration//GEN-END:variables
}
