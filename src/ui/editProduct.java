/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ui;

import code.productCode;
import database.db;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;

/**
 *
 * @author M_Samly
 */
public class editProduct extends javax.swing.JInternalFrame {

    /**
     * Creates new form editProduct
     */
    public editProduct() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);

        show_Product();
    }

    public ArrayList<productCode> ProductList() {
        ArrayList<productCode> ProductList = new ArrayList<>();
        try {
            Connection con;
            Statement st;
            con = db.getConnection();
            st = con.createStatement();
            String query = "Select * from product order by barcode";
            ResultSet rs = st.executeQuery(query);
            productCode pro;
            while (rs.next()) {
                pro = new productCode(rs.getString("Barcode"), rs.getString("Name"), rs.getInt("Quantity"), rs.getFloat("BPrice"), rs.getFloat("WPrice"), rs.getFloat("RPrice"));
                ProductList.add(pro);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return ProductList;
    }

    public void show_Product() {
        ArrayList<productCode> list = ProductList();
        DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
        Object[] row = new Object[6];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getBarcode();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getQty();
            row[3] = list.get(i).getBprice();
            row[4] = list.get(i).getWprice();
            row[5] = list.get(i).getRprice();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtRPrice = new javax.swing.JTextField();
        txtWPrice = new javax.swing.JTextField();
        txtBPrice = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        txtSearchBarcode = new javax.swing.JTextField();
        txtSerchName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtBarcode = new javax.swing.JLabel();
        txtName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtQty = new javax.swing.JLabel();
        txtQtyNew = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtQtyTotal = new javax.swing.JLabel();

        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 712));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Barcode");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Name");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Buying Price");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Wholesale Price");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Retail Price");

        txtRPrice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtRPrice.setText("0.00");
        txtRPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRPriceKeyPressed(evt);
            }
        });

        txtWPrice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtWPrice.setText("0.00");
        txtWPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWPriceKeyPressed(evt);
            }
        });

        txtBPrice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtBPrice.setText("0.00");
        txtBPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBPriceKeyPressed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setText("Edit");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "Name", "Quantity", "B Price", "W Price", "R Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduct.getTableHeader().setReorderingAllowed(false);
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        tblProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblProductKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblProductKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        txtSearchBarcode.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtSearchBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchBarcodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchBarcodeKeyReleased(evt);
            }
        });

        txtSerchName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtSerchName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSerchNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSerchNameKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Search By Name");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Search By Barcode");

        txtBarcode.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        txtName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Quantity");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Old");

        txtQty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtQty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtQty.setText("0");

        txtQtyNew.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtQtyNew.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQtyNew.setText("0");
        txtQtyNew.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQtyNewKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("New");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Total");

        txtQtyTotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtQtyTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtQtyTotal.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtQtyTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtQtyNew, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQtyNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQtyTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(txtBPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBarcode, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnReset)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSave))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtWPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtRPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSerchName, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearchBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSerchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtWPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnReset)
                            .addComponent(btnSave))))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRPriceKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //txtWPrice.requestFocus();
            if (!txtQty.getText().equals("")) {
                if (!txtBPrice.getText().equals("")) {
                    if (!txtWPrice.getText().equals("")) {
                        if (!txtRPrice.getText().equals("")) {

                            int YesORNo = JOptionPane.showConfirmDialog(null, "Do you want Update Product", "Update Option", JOptionPane.YES_NO_OPTION);
                            if (YesORNo == 0) {

                                try {

                                    Connection con;
                                    PreparedStatement pst, pst1;
                                    con = db.getConnection();

                                    String barcode = txtBarcode.getText().toString().trim();
                                    String name = txtName.getText().toString().trim();
                                    int qty = Integer.parseInt(txtQtyTotal.getText().toString().trim());
                                    float bprice = Float.parseFloat(txtBPrice.getText().toString().trim());
                                    float wprice = Float.parseFloat(txtWPrice.getText().toString().trim());
                                    float rprice = Float.parseFloat(txtRPrice.getText().toString().trim());

                                    productCode pro = new productCode(barcode, name, qty, bprice, wprice, rprice);

                                    String query = "update product set quantity = '" + pro.getQty() + "', bprice = '" + pro.getBprice() + "', wprice = '" + pro.getWprice() + "', rprice = '" + pro.getRprice() + "' where barcode = '" + pro.getBarcode() + "' AND name = '" + pro.getName() + "' ";

                                    pst = con.prepareStatement(query);
                                    pst.executeUpdate();

                                    JOptionPane.showMessageDialog(null, "Product Sucessfully Updated!");

                                    int qtyupd = Integer.parseInt(txtQtyNew.getText());
                                    int YesORNobarcode = JOptionPane.showConfirmDialog(null, "Are you ready for print barcodes?", "Barcode Print", JOptionPane.YES_NO_OPTION);
                                    if (YesORNobarcode == 0) {
                                        int lable_print_final = 0;
                                        int lable_print = qtyupd / 3;
                                        int lable_print_remaining = qtyupd % 3;
                                        if (lable_print_remaining != 0) {
                                            lable_print_final = lable_print + 1;
                                        } else {
                                            lable_print_final = lable_print;
                                        }
                                        for (int i = 0; i < lable_print_final; i++) {
                                            BarcodePrint();
                                        }
                                        String query1 = "Insert into barcode_print (date,time,Barcode,Name,Qty) values (CURDATE(),CURTIME(),?,?,?)";
                                        pst1 = con.prepareStatement(query1);

                                        pst1.setString(1, txtBarcode.getText().trim());
                                        pst1.setString(2, txtName.getText().trim());
                                        pst1.setInt(3, qtyupd);
                                        pst1.executeUpdate();
                                    }

                                    txtBarcode.setText(null);
                                    txtName.setText(null);
                                    txtQty.setText("0");
                                    txtQtyNew.setText("0");
                                    txtQtyTotal.setText("0");
                                    txtBPrice.setText("0.00");
                                    txtWPrice.setText("0.00");
                                    txtRPrice.setText("0.00");

                                    DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
                                    model.setRowCount(0);
                                    show_Product();

                                    txtBarcode.requestFocus();
                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(null, "Check The Product Barcode", "Save Error", JOptionPane.ERROR_MESSAGE);
                                    txtBarcode.requestFocus();
                                }

                            }

                        } else {
                            txtRPrice.requestFocus();
                        }
                    } else {
                        txtWPrice.requestFocus();
                    }
                } else {
                    txtBPrice.requestFocus();
                }
            } else {
                txtQtyNew.requestFocus();
            }
        }
    }//GEN-LAST:event_txtRPriceKeyPressed

    public void BarcodePrint() {

        try {
            Connection con;
            PreparedStatement pst, pst1, pst2, pst3, pst4, pst5;
            con = db.getConnection();
            String barcode = txtBarcode.getText();
            HashMap m = new HashMap();
            m.put("barcode", barcode);
            try {
                String jrmxl = "";
                String name = "";
                try {
                    Statement st = con.createStatement();
                    String query = "Select jrxml,name from shop_details where sh_id = 1";
                    ResultSet rs = st.executeQuery(query);
                    while (rs.next()) {
                        jrmxl = rs.getString("jrxml");
                        name = rs.getString("name");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                m.put("shop", name);
                JasperDesign jdesing = JRXmlLoader.load(jrmxl + "\\barcode.jrxml");
                JasperReport ireport = JasperCompileManager.compileReport(jdesing);
                JasperPrint jprint = JasperFillManager.fillReport(ireport, m, con);
                //JasperViewer.viewReport(jprint);
                JasperPrintManager.printReport(jprint, false);
            } catch (JRException ex) {
                Logger.getLogger(barcodeProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void txtWPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWPriceKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txtWPrice.getText().equals("")) {
                txtRPrice.requestFocus();
            } else {
                txtWPrice.requestFocus();
            }
        }
    }//GEN-LAST:event_txtWPriceKeyPressed

    private void txtBPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBPriceKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txtBPrice.getText().equals("")) {
                txtWPrice.requestFocus();
            } else {
                txtBPrice.requestFocus();
            }
        }
    }//GEN-LAST:event_txtBPriceKeyPressed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (!txtQty.getText().equals("")) {
            if (!txtBPrice.getText().equals("")) {
                if (!txtWPrice.getText().equals("")) {
                    if (!txtRPrice.getText().equals("")) {

                        int YesORNo = JOptionPane.showConfirmDialog(null, "Do you want Update Product", "Update Option", JOptionPane.YES_NO_OPTION);
                        if (YesORNo == 0) {

                            try {

                                Connection con;
                                PreparedStatement pst, pst1;
                                con = db.getConnection();

                                String barcode = txtBarcode.getText().toString().trim();
                                String name = txtName.getText().toString().trim();
                                int qty = Integer.parseInt(txtQtyTotal.getText().toString().trim());
                                float bprice = Float.parseFloat(txtBPrice.getText().toString().trim());
                                float wprice = Float.parseFloat(txtWPrice.getText().toString().trim());
                                float rprice = Float.parseFloat(txtRPrice.getText().toString().trim());

                                productCode pro = new productCode(barcode, name, qty, bprice, wprice, rprice);

                                String query = "update product set quantity = '" + pro.getQty() + "', bprice = '" + pro.getBprice() + "', wprice = '" + pro.getWprice() + "', rprice = '" + pro.getRprice() + "' where barcode = '" + pro.getBarcode() + "' AND name = '" + pro.getName() + "' ";

                                pst = con.prepareStatement(query);
                                pst.executeUpdate();

                                JOptionPane.showMessageDialog(null, "Product Sucessfully Updated!");

                                int qtyupd = Integer.parseInt(txtQtyNew.getText());
                                int YesORNobarcode = JOptionPane.showConfirmDialog(null, "Are you ready for print barcodes?", "Barcode Print", JOptionPane.YES_NO_OPTION);
                                if (YesORNobarcode == 0) {
                                    int lable_print_final = 0;
                                    int lable_print = qtyupd / 3;
                                    int lable_print_remaining = qtyupd % 3;
                                    if (lable_print_remaining != 0) {
                                        lable_print_final = lable_print + 1;
                                    } else {
                                        lable_print_final = lable_print;
                                    }
                                    for (int i = 0; i < lable_print_final; i++) {
                                        BarcodePrint();
                                    }
                                    String query1 = "Insert into barcode_print (date,time,Barcode,Name,Qty) values (CURDATE(),CURTIME(),?,?,?)";
                                    pst1 = con.prepareStatement(query1);

                                    pst1.setString(1, txtBarcode.getText().trim());
                                    pst1.setString(2, txtName.getText().trim());
                                    pst1.setInt(3, qtyupd);
                                    pst1.executeUpdate();
                                }

                                txtBarcode.setText(null);
                                txtName.setText(null);
                                txtQty.setText("0");
                                txtQtyNew.setText("0");
                                txtQtyTotal.setText("0");
                                txtBPrice.setText("0.00");
                                txtWPrice.setText("0.00");
                                txtRPrice.setText("0.00");

                                DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
                                model.setRowCount(0);
                                show_Product();

                                txtBarcode.requestFocus();
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "Check The Product Barcode", "Save Error", JOptionPane.ERROR_MESSAGE);
                                txtBarcode.requestFocus();
                            }

                        }

                    } else {
                        txtRPrice.requestFocus();
                    }
                } else {
                    txtWPrice.requestFocus();
                }
            } else {
                txtBPrice.requestFocus();
            }
        } else {
            txtQtyNew.requestFocus();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtSerchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerchNameKeyReleased
        // TODO add your handling code here:
        ArrayList<productCode> al = new ArrayList<productCode>();
        //al = new ArrayList<AddItems>();
        String val = txtSerchName.getText().toString().trim();
        try {
            Connection con;
            Statement st;
            con = db.getConnection();
            st = con.createStatement();
            String query = "Select * from product where name like '" + val + "%'";
            ResultSet rs = st.executeQuery(query);
            productCode pro;
            while (rs.next()) {
                pro = new productCode(rs.getString("Barcode"), rs.getString("Name"), rs.getInt("Quantity"), rs.getFloat("BPrice"), rs.getFloat("WPrice"), rs.getFloat("RPrice"));
                al.add(pro);
            }

            DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
            model.setRowCount(0);
            Object[] row = new Object[6];
            for (int i = 0; i < al.size(); i++) {
                row[0] = al.get(i).getBarcode();
                row[1] = al.get(i).getName();
                row[2] = al.get(i).getQty();
                row[3] = al.get(i).getBprice();
                row[4] = al.get(i).getWprice();
                row[5] = al.get(i).getRprice();
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cannot find Product Barcode", "Search Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtSerchNameKeyReleased

    private void txtSearchBarcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchBarcodeKeyReleased
        // TODO add your handling code here:
        ArrayList<productCode> al = new ArrayList<productCode>();
        //al = new ArrayList<AddItems>();
        String val = txtSearchBarcode.getText().toString().trim();
        try {
            Connection con;
            Statement st;
            con = db.getConnection();
            st = con.createStatement();
            String query = "Select * from product where barcode like '" + val + "%'";
            ResultSet rs = st.executeQuery(query);
            productCode pro;
            while (rs.next()) {
                pro = new productCode(rs.getString("Barcode"), rs.getString("Name"), rs.getInt("Quantity"), rs.getFloat("BPrice"), rs.getFloat("WPrice"), rs.getFloat("RPrice"));
                al.add(pro);
            }

            DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
            model.setRowCount(0);
            Object[] row = new Object[6];
            for (int i = 0; i < al.size(); i++) {
                row[0] = al.get(i).getBarcode();
                row[1] = al.get(i).getName();
                row[2] = al.get(i).getQty();
                row[3] = al.get(i).getBprice();
                row[4] = al.get(i).getWprice();
                row[5] = al.get(i).getRprice();
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Cannot find Product Barcode", "Search Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtSearchBarcodeKeyReleased

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        // TODO add your handling code here:
        int i = tblProduct.getSelectedRow();
        TableModel model = tblProduct.getModel();
        txtBarcode.setText(model.getValueAt(i, 0).toString());
        txtName.setText(model.getValueAt(i, 1).toString());
        txtQty.setText(model.getValueAt(i, 2).toString());
        txtQtyTotal.setText(model.getValueAt(i, 2).toString());
        txtBPrice.setText(model.getValueAt(i, 3).toString());
        txtWPrice.setText(model.getValueAt(i, 4).toString());
        txtRPrice.setText(model.getValueAt(i, 5).toString());
        txtQtyNew.requestFocus();
    }//GEN-LAST:event_tblProductMouseClicked

    private void tblProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProductKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            int i = tblProduct.getSelectedRow();
            TableModel model = tblProduct.getModel();
            txtBarcode.setText(model.getValueAt(i, 0).toString());
            txtName.setText(model.getValueAt(i, 1).toString());
            txtQty.setText(model.getValueAt(i, 2).toString());
            txtQtyTotal.setText(model.getValueAt(i, 2).toString());
            txtBPrice.setText(model.getValueAt(i, 3).toString());
            txtWPrice.setText(model.getValueAt(i, 4).toString());
            txtRPrice.setText(model.getValueAt(i, 5).toString());
        }
    }//GEN-LAST:event_tblProductKeyReleased

    private void txtSerchNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerchNameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tblProduct.requestFocus();
            tblProduct.setRowSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_txtSerchNameKeyPressed

    private void txtSearchBarcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchBarcodeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tblProduct.requestFocus();
            tblProduct.setRowSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_txtSearchBarcodeKeyPressed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtBarcode.setText(null);
        txtName.setText(null);
        txtQty.setText("0");
        txtQtyNew.setText("0");
        txtQtyTotal.setText("0");
        txtBPrice.setText("0.00");
        txtWPrice.setText("0.00");
        txtRPrice.setText("0.00");
        txtBarcode.requestFocus();
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtQtyNewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyNewKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int qty = Integer.parseInt(txtQty.getText().toString());
            int qtyNew = Integer.parseInt(txtQtyNew.getText().toString());

            int qtyTotal = qty + qtyNew;
            txtQtyTotal.setText(Integer.toString(qtyTotal));
            txtBPrice.requestFocus();
        }
    }//GEN-LAST:event_txtQtyNewKeyPressed

    private void tblProductKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProductKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtQtyNew.requestFocus();
        }
    }//GEN-LAST:event_tblProductKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtBPrice;
    private javax.swing.JLabel txtBarcode;
    private javax.swing.JLabel txtName;
    private javax.swing.JLabel txtQty;
    private javax.swing.JTextField txtQtyNew;
    private javax.swing.JLabel txtQtyTotal;
    private javax.swing.JTextField txtRPrice;
    private javax.swing.JTextField txtSearchBarcode;
    private javax.swing.JTextField txtSerchName;
    private javax.swing.JTextField txtWPrice;
    // End of variables declaration//GEN-END:variables
}
